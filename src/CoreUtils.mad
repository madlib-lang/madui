import { fulfill } from "Wish"

export runAction = #- env => updater => {
  env.currentState = updater(env.currentState)
  window.env = env
  const newElement = env.rootView(env.currentState)
  env.patch(env.currentElement, newElement)
  env.currentElement = newElement
} -#


_wrapEventHandler = (_fulfill, _runAction) => #- (env, ctor, handler) => {
  return event => {
    event.eventType = event.type

    // Calling an event handler gives us a list of wishes
    let wishes = handler(env.currentState)(ctor(event))

    while (wishes !== null) {
      _fulfill(_runAction(env))(_runAction(env))(wishes.v)
      wishes = wishes.n
    }
  }
} -#

export wrapEventHandler = _wrapEventHandler(fulfill, runAction)
